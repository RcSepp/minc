import <builtin.acc>;

stmtdef testExprASTMembers $E $L $I $B {
	ExprAST E0 = $0; // ExprAST assignment
	printf("E0 == 0x%lx\n\n", E0);

	ExprAST E1 = $1; // Implicit cast LiteralExprAST -> ExprAST
	LiteralExprAST L1 = $1; // LiteralExprAST assignment
	printf("$1.value == %s\n", $1.value);
	printf("L1.value == %s\n\n", L1.value);

	ExprAST E2 = $2; // Implicit cast IdExprAST -> ExprAST
	IdExprAST I2 = $2; // IdExprAST assignment
	printf("I2.name == %s\n", I2.name);
	printf("$2.name == %s\n\n", $2.name);

	ExprAST E3 = $3; // Implicit cast BlockExprAST -> ExprAST
	BlockExprAST B3 = $3; // BlockExprAST assignment
	printf("parentBlock == 0x%lx\n", parentBlock);
	printf("B3.parent == 0x%lx\n", B3.parent);
	printf("$3.parent == 0x%lx\n", $3.parent);
	//$3.codegen(parentBlock);
	$3.parent = parentBlock;
	printf("$3.parent == 0x%lx\n", $3.parent);
	printf("B3.parent == 0x%lx\n", B3.parent);
}

testExprASTMembers 123 456 ident {}
