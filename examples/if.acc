import <builtin.acc>;

/*stmtdef if($<bool>) $B {
	LLVMValueRef ifCond = codegen($0, parentBlock);
	LLVMBasicBlockRef ifBlock = LLVMAppendBasicBlock(function, "ifBlock");
	LLVMBasicBlockRef elseBlock = LLVMAppendBasicBlock(function, "elseBlock");
	LLVMBuildCondBr(ifCond, ifBlock, elseBlock);

	LLVMPositionBuilder(ifBlock);
	codegen($1, parentBlock);
	LLVMBuildBr(elseBlock);

	LLVMPositionBuilder(elseBlock);
}*/

stmtdef if($E) $S {
	LLVMValueRef ifCond = codegen($0, parentBlock);
	LLVMBasicBlockRef ifBlock = LLVMAppendBasicBlock(function, "ifBlock");
	LLVMBasicBlockRef elseBlock = LLVMAppendBasicBlock(function, "elseBlock");
	LLVMBuildCondBr(ifCond, ifBlock, elseBlock);

	LLVMPositionBuilder(ifBlock);
	codegen($1, parentBlock);
	LLVMBuildBr(elseBlock);

	LLVMPositionBuilder(elseBlock);
}

int a = 3;
if (a != 0) return 20;
return 10;