import <builtin.acc>;

/*exprdef<double> explicitcast($<int>) {
	return LLVMBuildSIToFP(
		codegen($0, parentBlock),
		LLVMDoubleType(),
		""
	);
}*/

//double foo = 456.723;
//int bar = foo;

/*stmtdef printDouble $<double> {
	printf("%f\n", codegen($0, parentBlock));
}
printDouble foo;*/

// stmtdef DEBUG print($<int>) {
// 	/*// LLVMValueRef foo = ;
// 	//printf("LLVMGetNamedFunction('printf') = %u\n", getfunc(printf));

// 	LLVMValueRef value = codegen($0, parentBlock);

// 	//LLVMValueRef formatStr = LLVMConstString("xxx", 3, 0);

// 	LLVMValueRef args[1];
// 	args[0] = LLVMConstString("xxx", 3, 0);//formatStr;//"%i\n";
// 	//args[1] = formatStr;
// 	LLVMBuildCall(
// 		getfunc(printf),
// 		args,
// 		1,
// 		""
// 	);*/

// 	/*LLVMValueRef args[0];
// 	LLVMBuildCall(
// 		LLVMGetNamedFunction('TestFunc'),
// 		args,
// 		0,
// 		""
// 	);*/

// 	LLVMValueRef value = codegen($0, parentBlock);
// 	parentBlock.do printf("%i\n", value);
// }

return 123;