import <builtin.acc>;

stmtdef class2 $I $B {
	// Create struct type
	LLVMTypeRef structType = LLVMStructCreateNamed(LLVMGetGlobalContext(), $0.name);
	LLVMTypeRef elementTypes[256];

	// Define public member variable declaration in struct-body scope
	int i = 0;
	stmtdef2 $1 public $E {
		printf("<%i>\n", i);

		elementTypes[i] = LLVMInt32Type();
		i = i + 1;
	}

	// Generate struct-body code
	codegen($1, parentBlock);

	// Set struct member variable types
	LLVMStructSetBody(structType, elementTypes, i, 0);

	//TODO: Create statement to instantiate this class (see struct.acc for an attempt)

// For now just allocate a class pointer. If this line is skipped, LLVM will not write the type definition to struct2.ll
addToScope(parentBlock, $0, LLVMValueRef, LLVMBuildAlloca(LLVMPointerType(structType, 0), "abc"));
}

class2 Shape {
	public 123;
	public 456;
}